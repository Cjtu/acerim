language: python

python:
  - "2.7"
  - "3.4"
  - "3.5"

os:
  - linux

env:
  global:
  - CONDA_DEPS_27=false
  - CONDA_DEPS_35=false
  - COVERAGE=true  # Coverage support with codecov
  - FLAKE8=false  # Flake8 style checker


before_install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH=$HOME/miniconda/bin:$PATH
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --set anaconda_upload no
  - conda update -q conda
  - conda info -a

install:
  # Create and activate conda environment
  - conda create -q -n test-env python=$TRAVIS_PYTHON_VERSION
  - source activate test-env
  # Install non gdal dependencies
  - conda install pytest pytest-cov numpy scipy matplotlib pandas
  # Install gdal, libgdal and explicitly state versions to avoid mismatch bug
  - conda install gdal=2.1.0 libgdal=2.1.0
  # Upload test coverage stats with codecov
  - pip install codecov
  - python setup.py install

script:
  # Use the --cov flag to pytest-cov to run coverage stats
  - py.test --cov=./
    
after_success:
  # Tries to upload coverage to codecov, but does not fail build if upload fails
  - if [[ "$COVERAGE" == "true" ]]; then
    codecov || echo "codecov upload failed";
    fi
  - echo "Build success"
